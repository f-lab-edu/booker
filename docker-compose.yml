services:
  postgres:
    image: postgres:15
    container_name: keycloak_postgres
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=keycloak
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - "5432:5432"

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    command: start-dev
    environment:
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=keycloak
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_STRICT_HTTPS=false
      - KC_HOSTNAME_STRICT_BACKCHANNEL=false
      - KC_HTTP_PORT=8083
      - KC_HTTP_ENABLED=true
      - KEYCLOAK_ADMIN=keycloak_admin
      - KEYCLOAK_ADMIN_PASSWORD=keycloak_admin_password123!
      - KC_HEALTH_ENABLED=true
      - KC_PROXY=edge
    ports:
      - "8083:8083"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "/opt/keycloak/bin/kc.sh", "show-config"]
      interval: 10s
      timeout: 10s
      retries: 12
      start_period: 30s

  springboot:
    build:
      context: springboot
      dockerfile: Dockerfile
    container_name: springboot
    ports:
      - 8084:8084
    environment:
      - KEYCLOAK_EXTERNAL_URL=http://localhost:8083
      - KEYCLOAK_INTERNAL_URL=http://keycloak:8083
    depends_on:
      keycloak:
        condition: service_healthy
      keycloak-init:
        condition: service_completed_successfully
    restart: unless-stopped

  keycloak-init:
    image: curlimages/curl:8.7.1
    user: root
    depends_on:
      keycloak:
        condition: service_healthy
    entrypoint: ["/bin/sh", "/opt/keycloak-init.sh"]
    volumes:
      - ./keycloak-init.sh:/opt/keycloak-init.sh:ro

volumes:
  postgres_data: 