services:
  postgres:
    image: postgres:15
    container_name: keycloak_postgres
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=keycloak
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - "5432:5432"

  mysql:
    image: mysql:8.0
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1024M
        reservations:
          cpus: '1.0'
          memory: 1024M
    restart: always
    container_name: booker_mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root123
      - MYSQL_DATABASE=booker
      - MYSQL_USER=booker
      - MYSQL_PASSWORD=booker123
      - TZ=Asia/Seoul
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3308:3308"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "booker", "-pbooker123"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

  mysql-exporter:
    container_name: mysql-exporter
    image: prom/mysqld-exporter
    command:
      - "--mysqld.username=booker:booker123"
      - "--mysqld.address=mysql:3306"
    ports:
      - "9104:9104"
    depends_on:
      - mysql


  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    command: start-dev
    environment:
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=keycloak
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_STRICT_HTTPS=false
      - KC_HOSTNAME_STRICT_BACKCHANNEL=false
      - KC_HTTP_PORT=8083
      - KC_HTTP_ENABLED=true
      - KEYCLOAK_ADMIN=keycloak_admin
      - KEYCLOAK_ADMIN_PASSWORD=keycloak_admin_password123!
      - KC_HEALTH_ENABLED=true
      - KC_PROXY=edge
    ports:
      - "8083:8083"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "/opt/keycloak/bin/kc.sh", "show-config"]
      interval: 10s
      timeout: 10s
      retries: 12
      start_period: 30s

  springboot:
    build:
      context: booker-server
      dockerfile: Dockerfile
    container_name: springboot
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1024M
        reservations:
          cpus: '1.0'
          memory: 1024M
    ports:
      - "8084:8084"
      - "8085:8085"  # Actuator metrics endpoint
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/booker?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul
      - SPRING_DATASOURCE_USERNAME=booker
      - SPRING_DATASOURCE_PASSWORD=booker123
      - KEYCLOAK_REALM=myrealm
      - KEYCLOAK_AUTH_SERVER_URL=http://keycloak:8083
      - KEYCLOAK_CLIENT_ID=springboot-client
      - KEYCLOAK_CLIENT_SECRET=springboot-secret
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,metrics,prometheus
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
      - MANAGEMENT_SERVER_PORT=8085
    depends_on:
      mysql:
        condition: service_healthy
      keycloak-init:
        condition: service_completed_successfully
    restart: unless-stopped

  keycloak-init:
    image: curlimages/curl:8.7.1
    user: root
    depends_on:
      keycloak:
        condition: service_healthy
    environment:
      # Google OAuth 설정 - 실제 사용시 환경변수로 주입
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
    entrypoint: ["/bin/sh", "/opt/keycloak-init.sh"]
    volumes:
      - ./keycloak-init.sh:/opt/keycloak-init.sh:ro

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: always
    depends_on:
      - springboot
      - mysql-exporter

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=redis-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    restart: always
    depends_on:
      - prometheus
      - influxdb
    privileged: true

  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=myk6db
      - INFLUXDB_HTTP_AUTH_ENABLED=false
    volumes:
      - influxdb_data:/var/lib/influxdb
    restart: always

  k6:
    image: grafana/k6:latest
    ports:
      - "6565:6565"
    volumes:
      - ./k6-script:/scripts
    command: [
      "run",
      "/scripts/book-loan-load-test.js",
      "--out",
      "influxdb=http://influxdb:8086/myk6db"
    ]
    network_mode: host

volumes:
  postgres_data:
  mysql_data:
  prometheus_data:
  grafana_data:
  influxdb_data:
